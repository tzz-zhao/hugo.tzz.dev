<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>a18n on Tzz.Dev</title><link>https://tzz.dev/tags/a18n/</link><description>Recent content in a18n on Tzz.Dev</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><copyright>&amp;copy; 2022 tzz.dev</copyright><lastBuildDate>Sun, 01 May 2022 07:06:17 +0900</lastBuildDate><atom:link href="https://tzz.dev/tags/a18n/index.xml" rel="self" type="application/rss+xml"/><item><title>Laravelの日本語化</title><link>https://tzz.dev/backend/laravel/a18n/</link><pubDate>Sun, 01 May 2022 07:06:17 +0900</pubDate><guid>https://tzz.dev/backend/laravel/a18n/</guid><description>Laravelでは翻訳文字列を管理する方法が2つあります。
langフォルダに各言語のフォルダを配置して、言語文字列はその言語フォルダに配置します。
/lang /en messages.php /ja messages.php langフォルダに言語別のjsonファイルで定義します。
翻訳可能な文字列が大量にあるアプリケーションに推奨します
/lang en.json ja.json それでは、日本語化をやってみましょう。
アプリケーションの言語設定 アプリケーションのデフォルト言語と予備言語をconfig/app.phpで設定します。
デフォルト言語に翻訳文字列が存在しない場合、予備言語の文字列を使用します
1 2 3 4 5 // デフォルト言語＝日本語 &amp;#39;locale&amp;#39; =&amp;gt; &amp;#39;ja&amp;#39;, // 予備言語＝英語 &amp;#39;fallback_locale&amp;#39; =&amp;gt; &amp;#39;en&amp;#39;, 自分で翻訳するのは面倒くさいので、Laravel Lang Publisherを使いましょう。
composer require laravel-lang/publisher laravel-lang/lang --dev 日本語言語ファイルを追加します。
1 php artisan lang:add ja これで日本語の言語フィアルが生成されます。
1 2 3 4 5 6 7 /lang /ja auth.php pagination.php passwords.php validation.php ja.json</description></item></channel></rss>